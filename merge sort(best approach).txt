void merge(int input[],int si,int ei){
    int size=ei-si+1;
    int mid=(si+ei)/2,j=mid+1,i=si,k=0;
    int *output=new int[size];
    while(i<=mid&&j<=ei)
    {
        if(input[i]<=input[j])
        {
            output[k]=input[i];
            k++;
            i++;
        }
        else if(input[i]>input[j])
        {
            output[k]=input[j];
            k++;
            j++;
        }
    }
    while(i<=mid)
    {
        output[k]=input[i];
        k++;
        i++;
    }
    while(j<=ei)
    {
        output[k]=input[j];
        k++;
        j++;
    }
    i=si;
    k=0;
    while(i<=ei)
    {
        input[i]=output[k];
        k++;
        i++;
    }
    delete []output;
}
void mergeSortHelper(int input[],int si,int ei){
    if(si>=ei)
        return;
    int mid=(si+ei)/2;
    mergeSortHelper(input,si,mid);
    mergeSortHelper(input,mid+1,ei);
    merge(input,si,ei);
}
void mergeSort(int input[], int size){
	// Write your code here
    if(size<2)
        return;
    int si=0,ei=size-1;
    mergeSortHelper(input,si,ei);
}