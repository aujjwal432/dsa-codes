Node *reverse_linked_list(Node *head) {
    if(head==NULL||head->next==NULL)
        return head;
    Node* smallhead=reverse_linked_list(head->next);
    head->next->next=head;
    head->next=NULL;
    return smallhead;
}
Node* kReverse(Node*head,int n) { 
    if(n==0){
return head;}
    if(n==1)
        return head;
    int i=1;
    Node*temp=head,*head1=head,*head2=head;
    while(temp!=NULL) {
        if(i%n==0||temp->next==NULL) { 
            Node*head3=temp->next;
            temp->next=NULL;
            Node*h=head2; head2=reverse_linked_list(head2);
            if(head1==head){
                head1=head2;
                head=head2;
            }
            else 
                head1->next=head2;
            h->next=head3;
            head1=h;
            head2=head3;
            temp=head3;
        } 
        else{
            temp=temp->next;
        }
        i++;
    }
    return head;
}
